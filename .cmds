#!/bin/bash

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
WEB_DIR="/var/www/askeet"
DATA_CONTAINER_ID="data"

# Get ID of last run container
function dl() {
    docker ps -lq
}

# Start container based on specified image as a detached process
function dlstart() {
    local DOCKER_CMD=$1
    if [ -z $DOCKER_CMD ]; then
        DOCKER_CMD="arris/apache-symfony"
    fi

    docker run \
        -d \
        -p '8000:80' \
        -p '3306:3306' \
        -v $DIR:$WEB_DIR \
        --volumes-from data \
        $DOCKER_CMD
}

# Stop the last run container
function dlstop() {
    docker stop $(dl)
    docker rm -v $(dl)
}

function dlshell() {
    docker exec -it $(dl) bash
}

function symfony() {
    docker exec $(dl) bash -c "cd $WEB_DIR && symfony $*"
}

function datstart() {
    local DOCKER_CMD=$1
    if [ -z $DOCKER_CMD ]; then
        DOCKER_CMD="arris/apache-symfony"
    fi

    docker run \
        -v /etc/mysql \
        -v /var/lib/mysql \
        --name $DATA_CONTAINER_ID \
        arris/apache-symfony \
        echo "Run Data Container"
}

function datstop() {
    docker stop $DATA_CONTAINER_ID
    docker rm -v $DATA_CONTAINER_ID
}

function goaskeet() {
    # Day 1
    symfony init-project askeet
    symfony init-app frontend

    # Day 2
    rm config/schema.yml
    cp .schema.xml config/schema.xml
    echo "propel.mysql.tableType = InnoDB" >> config/propel.ini
    symfony propel-build-model 
    docker exec $(dl) bash -c "mysqladmin -uroot --force drop askeet"
    docker exec $(dl) bash -c "mysqladmin -uroot create askeet"
    cp .databases.yml config/databases.yml    
    symfony propel-build-sql
    docker exec $(dl) bash -c "mysql -uroot askeet < /var/www/askeet/data/sql/schema.sql"
    symfony propel-generate-crud frontend user User
    symfony propel-generate-crud frontend question Question
    symfony cc frontend config

    # Day 3
    cp .layout.css web/css/layout.css
    cp .main.css web/css/main.css
    # sed -i "s/stylesheets:    [main]/stylesheets:    [main, layout]/" apps/frontend/config/view.yml 
}
